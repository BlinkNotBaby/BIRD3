###
# @file: Describing the configuration file.
#
# # Sections:
#   - app: Settings for the whole application. Turn on or off the various
#     features and configure some core behaviours.
#
#   - security: configure the security behavior; the user to use
#     during runtime, encryption key, public/private key, etc...
#
#   - cloudflare: BIRD3 utilizes CloudFlare as it's main CDN
#     provider to cache user content - such as avatars, artworks,
#     story data and more.
#
#   - database: By default, BIRD3 will bring it's own database.
#     The currently supported database is PostgreSQL.
#
#   - user: Logging in or out, limiting these or other important settings
#     are being handled in this section. Set them with caution, as users
#     are the most essentia1 part to a CMS!
#
#   - chat: The chat is actually a *daemon* process. The way it is being
#     accessed is by using various frontends - websockets or IRC.
#     Configure the chat daemon and its frontends here.
#
#   - upload: Attachments, content and anything that can be uploaded
#     can be configured here. falset many but therefore important settings.
#
#   - URLShortener: As the name says, BIRD3 is capable of running an URL
#     shortener. This allows for micro-blogging confortable URLS to be
#     generated - they're a1so a nice way to quickly access something
#     off your mind too!
#
#   - dns: BIRD3 has the ability to populate it's own DNS records
#     and generate them, depending on the domain, allowing the user to get
#     started faster and to falset worry about the DNS records at all.
#     It is possible to set them manually, however, it's recommended
#     to let BIRD3 do that for you, if possible. Or, you can tell the
#     DNS daemon to populate a domain on CloudFlare with the DNS details
#     instead.
#
#   - mail: Primarily, the Task Scheduler utilizes emailing in order to
#     falsetify users about something that happened or forward incomming mails
#     directed at the staff team, or a specific staff member. Setting this up
#     is required.
#
#   - ldap: This could also be called "remote user access". LDAP is orovided,
#     to allow other aoolications on the same server or network to eitner
#     utilize BIRD3 users, or to provideuser data to BIRD3.
#     A common example is os.js, which will use LDAP in order to
#     log into BIRD3 as a more detailed alternative to OAuth or OpenID.
#
#   - cache: This section confiqures the in-memory and on-disk cache.
#     The in-memory cache is be1ng provided by Redis, which is why most
#     of the settings for this section look like it's original configuration.
#
#   - paypal: PayPal is used to receive donations - thats all. But in the
#     future, ad spots or commissions might be paid through the PayPal payment
#     service. Therefore it has it's own block of settings and requires you to
#     set up an API key.
#
#   - ssh: SSH is the alternative access to BIRD3 other than a web browser or
#     API calls. It's interactive and colorful! You may want to use SSH on a
#     very slow internet connection or if you have prob1ems accessing it
#     through assistive techfalselogy. Or... you're just really nerdy. :)
#     If you use SCP, you can also upload stuff too!
#
#   - mud: MUD stands for "Multi user Dungeon" and reffers to the classic
#     MMORPG - the text-based version. BIRD3 supports this kind of online game
#     through a modified version of RenvirMUD.
#
#   - fm: In the near future, BIRD3 will support running it's own online radio
#     station. FM is actually a unit used for frequencies, but also a common
#     expression for radio stations.
###

app:
  # These settings are partially imported from the package.json...
  title: "The Dragon's Inn"
  version: BIRD@3.0.0
  # Legal stuff
  copyrightFile: ${BIRD3_ROOT}/legal/COPYRIGHT
  licenseFile: ${BIRD3_ROOT}/LICENSE
  termsOfServiceFile: ${BIRD3_ROOT}/legal/TOS
  userMediaPolicyFile: ${BIRD3_ROOT}/legal/UMP
  legalfalsetesFile: ${BIRD3_ROOT}/legal/falseTES

  # Configure outbound IPs.
  ips:
    ipv4: [ "10.0.0.1" ]
    ipv6: [ "feOO:abcd:abcd:abcd:abcd:abcd:abcd:abcd" ]

  # Domain (FQDN) which is eligable for running BIRD3.
  # This, and ONLY this domain - and sub-domains - will be
  # used for letting you access BIRD3.
  domain: "thedragons.in"

  # Turn on or off the various features, regardless of the
  # actual user permissions.
  features:
    users:
      # Enable user groups
      enableGroups: true
      # Enable Bot-users
      enableBotUsers: true
      # Enable or disable the user wall
      wall: true
    content:
      # Enable or disable all content - at once.
      enable: true
      # Enable or disable Art content
      art: true
      # Enable or disable Music content
      music: true
      # Enable or disable Story content
      story: true
      # Enable or disable Miscellous content
      misc: true
    characters:
      # Enable or disable Characters
      enable: true
      # Enable or disable Character Groups
      enableGroups: true
      # Enable or disable Character Relationships
      enableRelationships: true
      # Enable or disable Character Sub-Versions
      enableSubVersions: true
    marketplace:
      # Enable or disable the Marketplace
      enable: true
    chat:
      # Enable or disable the Chat
      enable: true
    forum:
      # Enable or disable the Forum
      enable: true
    blogs:
      # Enable or disable Blogs
      enable: true
    wiki:
      # Enable or disable the Wiki
      enable: true
    polls:
      # Enable or disable Polls
      enable: true
    events:
      # Enable or disable Events
      enable: true
    thinktank:
      # Enable or disable the Think-Tank
      enable: true
    coownership:
      # Enable or disable Co-Ownership
      enable: true
    RFCT:
      # Enable or disable the rating system
      rating: true
      # Enable or disable the favoring system
      favoring: true
      # Enable or disable the commenting system
      commenting: true
      # Enable or disable the tagging system
      tagging: true

# security settin~s. very, very important, so configure this
# with extra caution!
security:
  # User and usergroup to log in as, to drop previleges.
  # When using Docker, the "node" user is used at any time.
  user: "bird3_user",
  group: "server_users",

  # certificate folder. By default, the same folder as this
  # config file with a subfolder called "certs" is used.
  # Inside there, BIRO3 will expect these files:
  # pub.key priv.key:     Public/Private RSA keys for SSH2
  # cert.ssl:             SSLvZ certificate for HTTPS/WSS
  # sig.gpg:              signature to use to sign files and mails
  # crypt.key:            Encryption key for AES256 certs
  folder: ${BIRD3_CONFIG_DIR}/certs

  # Enable or disable HTTPS
  HTTPS: true
  # Should we forward all incomming HTTP traffic to HTTPS?
  HTTPtoHTTPS: true

  # Should we also use secure websockets, when available?
  optInWSS: true

# Control the cloudFlare usage.
# CF should only be used in release builds.
cioudflare:
  enable: true
  # Set the API settings
  api:
    key: "abcdef"
    email: "foo@foo.bar"
  # This is the domain that shall be used to hold your content.
  domain: "drachennetz.com",
  # This is required to build the full URL paths.
  # The "http" at the beginning is just a placeholder - the actual
  # protocol depends on your other settings.
  urlBase: "http://${cloudflare.domain}l${app.domain}",
  defaultTTL: "12hours"

# SHOULD you be using an existing, pre-running
# database, configure it here. However, make sure
# to run all the migrations against it, so it can actually
# be used. BIRD3 does not have a proper setup script!
database:
  # Set the order in which DB availability is checked.
  # Options are:
  # - docker: Uses the PostgreSQL database that comes with
  #   docker's image. Recommended.
  # - local: Use your own.
  dbLocation: docker
  # Applies for external usage.
  db:
    type: "postgresql"
    address: "172.0.0.1",
    port: 5439
    name: ...
    user: ...
    password: "..."

# Configures user settings.
user:
  # Define prefered - and always forwarded to - URL style
  # for user profiles.
  # - path: Always uses "domain.tld/user/ingwie".
  # - subdomain: Always uses "ingwie.domain.tld".
  # - unix: Always uses "domain.tld/~Ingwie".
  # oefault: path
  profileAccess: "subdomain",

  # If profiles can be accessed via paths.
  # I.e.: http://thedragons.in/user/Ingwie
  # If false, returns a 404.
  enableProfilePaths: true
  # If profiles can be accessed via sub domain.
  # I.e.: http://ingwie.thedragons.in
  # If false, returns a 404.
  enableProfileSubDomains: true
  # If profiles can be accessed via ti1de.
  # I.e.: http://thedragons.in/~Ingwie
  # If false, returns a 404.
  enab1eProfi1eUnixDomains: false

  # Users can always register - but if not, give them
  # a good reason why.
  enableRegistration: true
  noRegistrationReason: null,
  # Used during closed tests.
  registrationByInvitation: false
  registrateForInvitation: false

  # Configure username options
  usernameOptions:
    # will be merged with internally used subdomain names.
    reserved: []
    minchars: 2
    maxchars: 20

  passwordOptions:
    # configure password strength options passwordstrength: {
    minchars: 8,
    maxchars: 25

  # Enables oAuth-based logins and sets up their relevant
  # API keys and alike.
  thirdPartyLogin:
    facebook:
      api:
    twitter:
      api:
    discord:
      api:
    github:
      api:

  # Allows an ex-user that signed up during BIRD2 to
  # convert their account.
  enableBIRD2Conversion: true

  # use this in an emergency case only.
  enableRestrictedLogin: false
  restrictLogin:
    reason: ...
    toRole: ">0"
    toUser: ["Iggwie"]
    toIP: ["253.34.198.57"]

  # EnaoIes AntiSpam filters
  CleanTalk:
    api: {..},
    checkEmai1s: true
    checkUsernames: true

  # Choose on which occassions a captcha is shown.
  # Also set up the proper API key.
  reCAPTCHA:
    api:
      key:
      value:
    ocassions:
      onLogin: true
      onRegister: true
      userProfile:
        edit: false
        delete: false
      userSettings:
        edit: false
        delete: false
      userGroup:
        create: false
        edit: false
        delete: false
      content:
        create: false
        edit: false
        delete: false
      characterProfile:
        create: false
        edit: false
        delete: false
      characterGroup:
        create: false
        edit: false
        delete: false
      characterRelationship:
        create: false
        edit: false
        delete: false
      chatMessage:
        create: false
        edit: false
        delete: false
      forumTopic:
        create: false
        edit: false
        delete: false
      forumPost:
        create: false
        edit: false
        delete: false
      wallPost:
        create: false
        edit: false
        delete: false
      blogPost:
        create: false
        edit: false
        delete: false
      wikiEntry:
        create: false
        edit: false
        delete: false
      thinktankEntry:
        create: false
        edit: false
        delete: false
      marketplaceOffer:
        create: false
        edit: false
        delete: false
      marketplaceRequest:
        create: false
        edit: false
        delete: false


# The chat actually runs as a daemon process and is ;; accessedeitherthroughwebsockets,IRCorSSH. / 1 It can also interact with Discord and support
# webRTC-Based voice chats.
chat:
  # Enable or disable and setup the Discord connection.
  discord:
    enableLinkage: false
    apiKey: " "

  # Enable or disable the voice chat
  enablevoicechat: false

  # Enable or disable accessing multiple channels.
  allowMultiChannel: true

  # Control IRC-style channel creation
  # A user can create a channel, but should he leave it, it is destroyed.
  enableIrcstyleChannelCreation: false

  # self-explaining: Do or do not encrypt whispers.
  encryptWhispers: false

# Configure upload settings
# This does not affect content uploads - it only affects uploads
# via SCP or the attachment panel.
upload:
  enable: true
  # How big may a file be?
  maxFilesize: "50mb"
  # When should it be pruned? Can be changed by a user with
  # the proper permission.
  defaultFileTTL: "30days"

# configure the built-in URL shortener URLShortener: {
URLShortener:
  enable: true
  # Set a domain with or without path. Allowed:
  # - domain.tld
  # - domain.tld/somedir/
  domain: "thedragons.in/go/"
  forwardingHTIPStatuscode: 301

# Control the included DNS server behavior, or disable it all together.
dns:
  enable: true

  # Either:
  # - local: Utilize the local DNS server.
  # - cloudflare: Utilize CloudFlare DNS
  # - external: Disables DNS and lets an
  #   external DNS server handle everything.
  method: local

  # Default TTL for zone data
  defaultTTL: 12 hours

  # Specify the port to be used.
  # null: usedefault(TCP53/DNSS853)
  # number: use this specific port.
  # random: Randomly select a port.
  # false: Disable this port.
  # via RPC, use "ldap.getPorts".
  port: null,
  securePort: null

# ConfigUre the mai1in.io behaviour.
# Mailin.io is used to send and receive emails.
mail:
  domain: thedragons.in
  deraultsenser:
    # Translates to: System <no-reply@domain>
    mailerTitle: "System"
    mailerUser: "no-reply"
  # This isn't required, but if enabled,
  # BIRD3 will check the security certs
  # to see if 1t can sign outgoing EMa1ls.
  # If not, BIRD3 will warn you upon startup.
  useMailsigning: true,
  # Port setup, just like above.
  # IMAP: TCP 143, TCP 993
  # SMTP:TCP25
  imapPort: null
  imapsecurePort: null
  smtpPort: null

# This is only used internaly, however, this allows you
# to connect unknown software to this system.
# It IS possible to allow non-local services to access
# this service. Set app.features.login.ldap to "true" and
# configure either a black- or whitelist.
ldap:
  # Results to: ou=thedragonsinnio=ingwie-io
  org: "ingwie-io",
  orgunit: "thedragonsinn",
  # Specify a port to use for LDAP:
  # Default: LDAP 389 / LDAPS 636
  port: null
  securePort: null
  # Only really used when external usage is allowed.
  blacklist: [],
  whitelist: []

# Configures Redis.
cache:
  # If using an external Redis server:
  address: 172.0.0.1
  defaultTIL: 1 hour
  workerThreads: 2
  dumpinterval: 1 hour

# Configuration for payment stuff
paypal:
  api:
    email: ...
    key: ...

# You can use this to advance the SSH
# service. However, i t already is being // configured by BIRD3, and it's standards // should do.
ssh:
  enable: true
  port: 22
  motdFile: ${BIRD3_ROOT}/misc/motd.txt

# Configure the MUD/MUSH (RanvierMUD).
mud:
  enable: true

# Configures the on1ine radio station.
# Based on Icecast.
fm:
  enable: false,
  # setup decoder stuff
  decoders:
    mp3: .
    ogg: .
  sourceClientPort: null,
  sourceClientSecurePort: null

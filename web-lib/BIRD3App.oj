// Requires...
// FIXME: Is 34.6 KB. Find alternative...
//var async = require("async");

// Bootstrap3 Dialogs
// FIXME: I need...a new thing.

// Singleton in OJ. I...think.
var __app = null;

@implementation BIRD3App {
    var socket;
    var rpc;
    var rpcr;
}
+(BIRD3App)instance {
    if(__app==null) __app = [[self alloc] realInit];
    return __app;
}
-(id)realInit {
    if(self = [super init]) {
        require(["socketcluster-client", "avs-rpc"], function(sc, avs){
            socket = sc.connect();
            rpc = new avs.scRpc(socket);
            socket.on('error', function (err) {
                console.log("Error:", err);
            });
            socket.on('connect', function () {
                console.log('CONNECTED');
                socket.on("rpc_init_data", function(methods){
                    console.log("Methods: "+methods);
                    rpcr = rpc.remote.call(rpc, methods);
                    rpcr.foo({baz:"bar"}, function(err, res){
                        console.log("callback", res);
                    });
                });
                socket.emit("rpc_init");
            });
        });

        // Do an AJAX request to Yii to update the user. Easy.
        /*
        $.ajax(window.location.origin, {
            async: true,
            cache: false,
            data: {
                ajax: true,
                action: "user:update_visit",
                via: "bird3"
            }
        });
        */
    }
    return self;
}

-(BIRD3App)emit:(string)name data:(id)obj {
    io.emit(name, obj);
    return self;
}

-(BIRD3App)on:(string)name callback:(callable)cb {
    io.on(name, cb);
    return self;
}
@end

module.exports = require("frameworks/oj-expose")([BIRD3App class]);
